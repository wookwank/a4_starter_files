// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: router_bridge.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_router_5fbridge_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_router_5fbridge_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_router_5fbridge_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_router_5fbridge_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_router_5fbridge_2eproto;
namespace router_bridge {
class Interface;
struct InterfaceDefaultTypeInternal;
extern InterfaceDefaultTypeInternal _Interface_default_instance_;
class InterfaceUpdate;
struct InterfaceUpdateDefaultTypeInternal;
extern InterfaceUpdateDefaultTypeInternal _InterfaceUpdate_default_instance_;
class ProtocolMessage;
struct ProtocolMessageDefaultTypeInternal;
extern ProtocolMessageDefaultTypeInternal _ProtocolMessage_default_instance_;
class RouterPacket;
struct RouterPacketDefaultTypeInternal;
extern RouterPacketDefaultTypeInternal _RouterPacket_default_instance_;
}  // namespace router_bridge
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace router_bridge {

// ===================================================================


// -------------------------------------------------------------------

class RouterPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:router_bridge.RouterPacket) */ {
 public:
  inline RouterPacket() : RouterPacket(nullptr) {}
  ~RouterPacket() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RouterPacket(
      ::google::protobuf::internal::ConstantInitialized);

  inline RouterPacket(const RouterPacket& from) : RouterPacket(nullptr, from) {}
  inline RouterPacket(RouterPacket&& from) noexcept
      : RouterPacket(nullptr, std::move(from)) {}
  inline RouterPacket& operator=(const RouterPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline RouterPacket& operator=(RouterPacket&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RouterPacket& default_instance() {
    return *internal_default_instance();
  }
  static inline const RouterPacket* internal_default_instance() {
    return reinterpret_cast<const RouterPacket*>(
        &_RouterPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RouterPacket& a, RouterPacket& b) { a.Swap(&b); }
  inline void Swap(RouterPacket* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RouterPacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RouterPacket* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RouterPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RouterPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RouterPacket& from) { RouterPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RouterPacket* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "router_bridge.RouterPacket"; }

 protected:
  explicit RouterPacket(::google::protobuf::Arena* arena);
  RouterPacket(::google::protobuf::Arena* arena, const RouterPacket& from);
  RouterPacket(::google::protobuf::Arena* arena, RouterPacket&& from) noexcept
      : RouterPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string interface = 1;
  void clear_interface() ;
  const std::string& interface() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface(Arg_&& arg, Args_... args);
  std::string* mutable_interface();
  PROTOBUF_NODISCARD std::string* release_interface();
  void set_allocated_interface(std::string* value);

  private:
  const std::string& _internal_interface() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface(
      const std::string& value);
  std::string* _internal_mutable_interface();

  public:
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:router_bridge.RouterPacket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RouterPacket_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RouterPacket& from_msg);
    ::google::protobuf::internal::ArenaStringPtr interface_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_router_5fbridge_2eproto;
};
// -------------------------------------------------------------------

class Interface final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:router_bridge.Interface) */ {
 public:
  inline Interface() : Interface(nullptr) {}
  ~Interface() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface(
      ::google::protobuf::internal::ConstantInitialized);

  inline Interface(const Interface& from) : Interface(nullptr, from) {}
  inline Interface(Interface&& from) noexcept
      : Interface(nullptr, std::move(from)) {}
  inline Interface& operator=(const Interface& from) {
    CopyFrom(from);
    return *this;
  }
  inline Interface& operator=(Interface&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Interface& default_instance() {
    return *internal_default_instance();
  }
  static inline const Interface* internal_default_instance() {
    return reinterpret_cast<const Interface*>(
        &_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Interface& a, Interface& b) { a.Swap(&b); }
  inline void Swap(Interface* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Interface* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Interface* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Interface>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Interface& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Interface& from) { Interface::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Interface* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "router_bridge.Interface"; }

 protected:
  explicit Interface(::google::protobuf::Arena* arena);
  Interface(::google::protobuf::Arena* arena, const Interface& from);
  Interface(::google::protobuf::Arena* arena, Interface&& from) noexcept
      : Interface(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kMacFieldNumber = 3,
    kIpFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes mac = 3;
  void clear_mac() ;
  const std::string& mac() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mac(Arg_&& arg, Args_... args);
  std::string* mutable_mac();
  PROTOBUF_NODISCARD std::string* release_mac();
  void set_allocated_mac(std::string* value);

  private:
  const std::string& _internal_mac() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mac(
      const std::string& value);
  std::string* _internal_mutable_mac();

  public:
  // uint32 ip = 2;
  void clear_ip() ;
  ::uint32_t ip() const;
  void set_ip(::uint32_t value);

  private:
  ::uint32_t _internal_ip() const;
  void _internal_set_ip(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:router_bridge.Interface)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Interface_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Interface& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr mac_;
    ::uint32_t ip_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_router_5fbridge_2eproto;
};
// -------------------------------------------------------------------

class InterfaceUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:router_bridge.InterfaceUpdate) */ {
 public:
  inline InterfaceUpdate() : InterfaceUpdate(nullptr) {}
  ~InterfaceUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceUpdate(const InterfaceUpdate& from) : InterfaceUpdate(nullptr, from) {}
  inline InterfaceUpdate(InterfaceUpdate&& from) noexcept
      : InterfaceUpdate(nullptr, std::move(from)) {}
  inline InterfaceUpdate& operator=(const InterfaceUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceUpdate& operator=(InterfaceUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceUpdate* internal_default_instance() {
    return reinterpret_cast<const InterfaceUpdate*>(
        &_InterfaceUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(InterfaceUpdate& a, InterfaceUpdate& b) { a.Swap(&b); }
  inline void Swap(InterfaceUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceUpdate& from) { InterfaceUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InterfaceUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "router_bridge.InterfaceUpdate"; }

 protected:
  explicit InterfaceUpdate(::google::protobuf::Arena* arena);
  InterfaceUpdate(::google::protobuf::Arena* arena, const InterfaceUpdate& from);
  InterfaceUpdate(::google::protobuf::Arena* arena, InterfaceUpdate&& from) noexcept
      : InterfaceUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfacesFieldNumber = 1,
  };
  // repeated .router_bridge.Interface interfaces = 1;
  int interfaces_size() const;
  private:
  int _internal_interfaces_size() const;

  public:
  void clear_interfaces() ;
  ::router_bridge::Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>* mutable_interfaces();

  private:
  const ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>& _internal_interfaces() const;
  ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>* _internal_mutable_interfaces();
  public:
  const ::router_bridge::Interface& interfaces(int index) const;
  ::router_bridge::Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>& interfaces() const;
  // @@protoc_insertion_point(class_scope:router_bridge.InterfaceUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InterfaceUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::router_bridge::Interface > interfaces_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_router_5fbridge_2eproto;
};
// -------------------------------------------------------------------

class ProtocolMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:router_bridge.ProtocolMessage) */ {
 public:
  inline ProtocolMessage() : ProtocolMessage(nullptr) {}
  ~ProtocolMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtocolMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProtocolMessage(const ProtocolMessage& from) : ProtocolMessage(nullptr, from) {}
  inline ProtocolMessage(ProtocolMessage&& from) noexcept
      : ProtocolMessage(nullptr, std::move(from)) {}
  inline ProtocolMessage& operator=(const ProtocolMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtocolMessage& operator=(ProtocolMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtocolMessage& default_instance() {
    return *internal_default_instance();
  }
  enum MessageCase {
    kInterfaceUpdate = 1,
    kRouterPacket = 2,
    MESSAGE_NOT_SET = 0,
  };
  static inline const ProtocolMessage* internal_default_instance() {
    return reinterpret_cast<const ProtocolMessage*>(
        &_ProtocolMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ProtocolMessage& a, ProtocolMessage& b) { a.Swap(&b); }
  inline void Swap(ProtocolMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtocolMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtocolMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ProtocolMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProtocolMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProtocolMessage& from) { ProtocolMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProtocolMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "router_bridge.ProtocolMessage"; }

 protected:
  explicit ProtocolMessage(::google::protobuf::Arena* arena);
  ProtocolMessage(::google::protobuf::Arena* arena, const ProtocolMessage& from);
  ProtocolMessage(::google::protobuf::Arena* arena, ProtocolMessage&& from) noexcept
      : ProtocolMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceUpdateFieldNumber = 1,
    kRouterPacketFieldNumber = 2,
  };
  // .router_bridge.InterfaceUpdate interface_update = 1;
  bool has_interface_update() const;
  private:
  bool _internal_has_interface_update() const;

  public:
  void clear_interface_update() ;
  const ::router_bridge::InterfaceUpdate& interface_update() const;
  PROTOBUF_NODISCARD ::router_bridge::InterfaceUpdate* release_interface_update();
  ::router_bridge::InterfaceUpdate* mutable_interface_update();
  void set_allocated_interface_update(::router_bridge::InterfaceUpdate* value);
  void unsafe_arena_set_allocated_interface_update(::router_bridge::InterfaceUpdate* value);
  ::router_bridge::InterfaceUpdate* unsafe_arena_release_interface_update();

  private:
  const ::router_bridge::InterfaceUpdate& _internal_interface_update() const;
  ::router_bridge::InterfaceUpdate* _internal_mutable_interface_update();

  public:
  // .router_bridge.RouterPacket router_packet = 2;
  bool has_router_packet() const;
  private:
  bool _internal_has_router_packet() const;

  public:
  void clear_router_packet() ;
  const ::router_bridge::RouterPacket& router_packet() const;
  PROTOBUF_NODISCARD ::router_bridge::RouterPacket* release_router_packet();
  ::router_bridge::RouterPacket* mutable_router_packet();
  void set_allocated_router_packet(::router_bridge::RouterPacket* value);
  void unsafe_arena_set_allocated_router_packet(::router_bridge::RouterPacket* value);
  ::router_bridge::RouterPacket* unsafe_arena_release_router_packet();

  private:
  const ::router_bridge::RouterPacket& _internal_router_packet() const;
  ::router_bridge::RouterPacket* _internal_mutable_router_packet();

  public:
  void clear_message();
  MessageCase message_case() const;
  // @@protoc_insertion_point(class_scope:router_bridge.ProtocolMessage)
 private:
  class _Internal;
  void set_has_interface_update();
  void set_has_router_packet();
  inline bool has_message() const;
  inline void clear_has_message();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ProtocolMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProtocolMessage& from_msg);
    union MessageUnion {
      constexpr MessageUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::router_bridge::InterfaceUpdate* interface_update_;
      ::router_bridge::RouterPacket* router_packet_;
    } message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_router_5fbridge_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ProtocolMessage

// .router_bridge.InterfaceUpdate interface_update = 1;
inline bool ProtocolMessage::has_interface_update() const {
  return message_case() == kInterfaceUpdate;
}
inline bool ProtocolMessage::_internal_has_interface_update() const {
  return message_case() == kInterfaceUpdate;
}
inline void ProtocolMessage::set_has_interface_update() {
  _impl_._oneof_case_[0] = kInterfaceUpdate;
}
inline void ProtocolMessage::clear_interface_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_case() == kInterfaceUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.message_.interface_update_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.interface_update_);
    }
    clear_has_message();
  }
}
inline ::router_bridge::InterfaceUpdate* ProtocolMessage::release_interface_update() {
  // @@protoc_insertion_point(field_release:router_bridge.ProtocolMessage.interface_update)
  if (message_case() == kInterfaceUpdate) {
    clear_has_message();
    auto* temp = _impl_.message_.interface_update_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_.interface_update_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::router_bridge::InterfaceUpdate& ProtocolMessage::_internal_interface_update() const {
  return message_case() == kInterfaceUpdate ? *_impl_.message_.interface_update_ : reinterpret_cast<::router_bridge::InterfaceUpdate&>(::router_bridge::_InterfaceUpdate_default_instance_);
}
inline const ::router_bridge::InterfaceUpdate& ProtocolMessage::interface_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.ProtocolMessage.interface_update)
  return _internal_interface_update();
}
inline ::router_bridge::InterfaceUpdate* ProtocolMessage::unsafe_arena_release_interface_update() {
  // @@protoc_insertion_point(field_unsafe_arena_release:router_bridge.ProtocolMessage.interface_update)
  if (message_case() == kInterfaceUpdate) {
    clear_has_message();
    auto* temp = _impl_.message_.interface_update_;
    _impl_.message_.interface_update_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtocolMessage::unsafe_arena_set_allocated_interface_update(::router_bridge::InterfaceUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_message();
  if (value) {
    set_has_interface_update();
    _impl_.message_.interface_update_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:router_bridge.ProtocolMessage.interface_update)
}
inline ::router_bridge::InterfaceUpdate* ProtocolMessage::_internal_mutable_interface_update() {
  if (message_case() != kInterfaceUpdate) {
    clear_message();
    set_has_interface_update();
    _impl_.message_.interface_update_ =
        ::google::protobuf::Message::DefaultConstruct<::router_bridge::InterfaceUpdate>(GetArena());
  }
  return _impl_.message_.interface_update_;
}
inline ::router_bridge::InterfaceUpdate* ProtocolMessage::mutable_interface_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::router_bridge::InterfaceUpdate* _msg = _internal_mutable_interface_update();
  // @@protoc_insertion_point(field_mutable:router_bridge.ProtocolMessage.interface_update)
  return _msg;
}

// .router_bridge.RouterPacket router_packet = 2;
inline bool ProtocolMessage::has_router_packet() const {
  return message_case() == kRouterPacket;
}
inline bool ProtocolMessage::_internal_has_router_packet() const {
  return message_case() == kRouterPacket;
}
inline void ProtocolMessage::set_has_router_packet() {
  _impl_._oneof_case_[0] = kRouterPacket;
}
inline void ProtocolMessage::clear_router_packet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_case() == kRouterPacket) {
    if (GetArena() == nullptr) {
      delete _impl_.message_.router_packet_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.message_.router_packet_);
    }
    clear_has_message();
  }
}
inline ::router_bridge::RouterPacket* ProtocolMessage::release_router_packet() {
  // @@protoc_insertion_point(field_release:router_bridge.ProtocolMessage.router_packet)
  if (message_case() == kRouterPacket) {
    clear_has_message();
    auto* temp = _impl_.message_.router_packet_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.message_.router_packet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::router_bridge::RouterPacket& ProtocolMessage::_internal_router_packet() const {
  return message_case() == kRouterPacket ? *_impl_.message_.router_packet_ : reinterpret_cast<::router_bridge::RouterPacket&>(::router_bridge::_RouterPacket_default_instance_);
}
inline const ::router_bridge::RouterPacket& ProtocolMessage::router_packet() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.ProtocolMessage.router_packet)
  return _internal_router_packet();
}
inline ::router_bridge::RouterPacket* ProtocolMessage::unsafe_arena_release_router_packet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:router_bridge.ProtocolMessage.router_packet)
  if (message_case() == kRouterPacket) {
    clear_has_message();
    auto* temp = _impl_.message_.router_packet_;
    _impl_.message_.router_packet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ProtocolMessage::unsafe_arena_set_allocated_router_packet(::router_bridge::RouterPacket* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_message();
  if (value) {
    set_has_router_packet();
    _impl_.message_.router_packet_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:router_bridge.ProtocolMessage.router_packet)
}
inline ::router_bridge::RouterPacket* ProtocolMessage::_internal_mutable_router_packet() {
  if (message_case() != kRouterPacket) {
    clear_message();
    set_has_router_packet();
    _impl_.message_.router_packet_ =
        ::google::protobuf::Message::DefaultConstruct<::router_bridge::RouterPacket>(GetArena());
  }
  return _impl_.message_.router_packet_;
}
inline ::router_bridge::RouterPacket* ProtocolMessage::mutable_router_packet() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::router_bridge::RouterPacket* _msg = _internal_mutable_router_packet();
  // @@protoc_insertion_point(field_mutable:router_bridge.ProtocolMessage.router_packet)
  return _msg;
}

inline bool ProtocolMessage::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
inline void ProtocolMessage::clear_has_message() {
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}
inline ProtocolMessage::MessageCase ProtocolMessage::message_case() const {
  return ProtocolMessage::MessageCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// InterfaceUpdate

// repeated .router_bridge.Interface interfaces = 1;
inline int InterfaceUpdate::_internal_interfaces_size() const {
  return _internal_interfaces().size();
}
inline int InterfaceUpdate::interfaces_size() const {
  return _internal_interfaces_size();
}
inline void InterfaceUpdate::clear_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interfaces_.Clear();
}
inline ::router_bridge::Interface* InterfaceUpdate::mutable_interfaces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:router_bridge.InterfaceUpdate.interfaces)
  return _internal_mutable_interfaces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>* InterfaceUpdate::mutable_interfaces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:router_bridge.InterfaceUpdate.interfaces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interfaces();
}
inline const ::router_bridge::Interface& InterfaceUpdate::interfaces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.InterfaceUpdate.interfaces)
  return _internal_interfaces().Get(index);
}
inline ::router_bridge::Interface* InterfaceUpdate::add_interfaces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::router_bridge::Interface* _add = _internal_mutable_interfaces()->Add();
  // @@protoc_insertion_point(field_add:router_bridge.InterfaceUpdate.interfaces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>& InterfaceUpdate::interfaces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:router_bridge.InterfaceUpdate.interfaces)
  return _internal_interfaces();
}
inline const ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>&
InterfaceUpdate::_internal_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interfaces_;
}
inline ::google::protobuf::RepeatedPtrField<::router_bridge::Interface>*
InterfaceUpdate::_internal_mutable_interfaces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interfaces_;
}

// -------------------------------------------------------------------

// Interface

// string name = 1;
inline void Interface::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Interface::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.Interface.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:router_bridge.Interface.name)
}
inline std::string* Interface::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:router_bridge.Interface.name)
  return _s;
}
inline const std::string& Interface::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Interface::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Interface::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:router_bridge.Interface.name)
  return _impl_.name_.Release();
}
inline void Interface::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:router_bridge.Interface.name)
}

// uint32 ip = 2;
inline void Interface::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_ = 0u;
}
inline ::uint32_t Interface::ip() const {
  // @@protoc_insertion_point(field_get:router_bridge.Interface.ip)
  return _internal_ip();
}
inline void Interface::set_ip(::uint32_t value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:router_bridge.Interface.ip)
}
inline ::uint32_t Interface::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_;
}
inline void Interface::_internal_set_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_ = value;
}

// bytes mac = 3;
inline void Interface::clear_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_.ClearToEmpty();
}
inline const std::string& Interface::mac() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.Interface.mac)
  return _internal_mac();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_mac(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:router_bridge.Interface.mac)
}
inline std::string* Interface::mutable_mac() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mac();
  // @@protoc_insertion_point(field_mutable:router_bridge.Interface.mac)
  return _s;
}
inline const std::string& Interface::_internal_mac() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mac_.Get();
}
inline void Interface::_internal_set_mac(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.mac_.Mutable( GetArena());
}
inline std::string* Interface::release_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:router_bridge.Interface.mac)
  return _impl_.mac_.Release();
}
inline void Interface::set_allocated_mac(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mac_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mac_.IsDefault()) {
          _impl_.mac_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:router_bridge.Interface.mac)
}

// -------------------------------------------------------------------

// RouterPacket

// string interface = 1;
inline void RouterPacket::clear_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_.ClearToEmpty();
}
inline const std::string& RouterPacket::interface() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.RouterPacket.interface)
  return _internal_interface();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RouterPacket::set_interface(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:router_bridge.RouterPacket.interface)
}
inline std::string* RouterPacket::mutable_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface();
  // @@protoc_insertion_point(field_mutable:router_bridge.RouterPacket.interface)
  return _s;
}
inline const std::string& RouterPacket::_internal_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_.Get();
}
inline void RouterPacket::_internal_set_interface(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_.Set(value, GetArena());
}
inline std::string* RouterPacket::_internal_mutable_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_.Mutable( GetArena());
}
inline std::string* RouterPacket::release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:router_bridge.RouterPacket.interface)
  return _impl_.interface_.Release();
}
inline void RouterPacket::set_allocated_interface(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.interface_.IsDefault()) {
          _impl_.interface_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:router_bridge.RouterPacket.interface)
}

// bytes data = 2;
inline void RouterPacket::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& RouterPacket::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:router_bridge.RouterPacket.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RouterPacket::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:router_bridge.RouterPacket.data)
}
inline std::string* RouterPacket::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:router_bridge.RouterPacket.data)
  return _s;
}
inline const std::string& RouterPacket::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void RouterPacket::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* RouterPacket::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* RouterPacket::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:router_bridge.RouterPacket.data)
  return _impl_.data_.Release();
}
inline void RouterPacket::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:router_bridge.RouterPacket.data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace router_bridge


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_router_5fbridge_2eproto_2epb_2eh
